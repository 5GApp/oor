<?xml version="1.0" encoding="UTF-8"?>
<module xmlns="urn:ietf:params:xml:ns:yang:yin:1" xmlns:lispsimple="urn:ietf:params:xml:ns:yang:lispsimple" xmlns:inet="urn:ietf:params:xml:ns:yang:ietf-inet-types" xmlns:yang="urn:ietf:params:xml:ns:yang:ietf-yang-types" xmlns:iana="urn:ietf:params:xml:ns:yang:iana-afn-safi" name="lispsimple">
  <namespace uri="urn:ietf:params:xml:ns:yang:lispsimple"/>
  <prefix value="lispsimple"/>
  <import module="ietf-inet-types">
    <prefix value="inet"/>
  </import>
  <import module="ietf-yang-types">
    <prefix value="yang"/>
  </import>
  <import module="iana-afn-safi">
    <prefix value="iana"/>
  </import>
  <organization>
    <text>IETF LISP (Locator/ID Separation Protocol) Working Group</text>
  </organization>
  <contact>
    <text>lisp@ietf.org</text>
  </contact>
  <description>
    <text>This YANG module defines the generic configuration
data for LISP. The module can be extended by vendors 
to define vendor-specific LISP configuration 
parameters and policies.

Copyright (c) 2015 IETF Trust and the persons identified as
authors of the code.  All rights reserved.

Redistribution and use in source and binary forms, with or
without modification, is permitted pursuant to, and subject
to the license terms contained in, the Simplified BSD License
set forth in Section 4.c of the IETF Trust's Legal Provisions
Relating to IETF Documents
(http://trustee.ietf.org/license-info).

This version of this YANG module is part of RFC 6338; see
the RFC itself for full legal notices.

</text>
  </description>
  <revision date="2015-02-11">
    <description>
      <text>Initial revision.</text>
    </description>
  </revision>
  <typedef name="negative-mapping-action">
    <description>
      <text>Defines the lisp map-cache ACT type</text>
    </description>
    <type name="enumeration">
      <enum name="no-action">
        <value value="0"/>
      </enum>
      <enum name="natively-forward">
        <value value="1"/>
      </enum>
      <enum name="send-map-request">
        <value value="2"/>
      </enum>
      <enum name="drop">
        <value value="3"/>
      </enum>
    </type>
  </typedef>
  <typedef name="eid-address">
    <type name="union">
      <type name="inet:ip-prefix"/>
      <type name="yang:mac-address"/>
    </type>
  </typedef>
  <typedef name="rloc-address">
    <type name="union">
      <type name="inet:ip-address"/>
    </type>
  </typedef>
  <typedef name="loc-space-address">
    <type name="union">
      <type name="inet:ip-address"/>
    </type>
  </typedef>
  <typedef name="instance-id-type">
    <type name="uint32">
      <range value="0..16777214"/>
    </type>
  </typedef>
  <grouping name="rlocs">
    <list name="rloc">
      <key value="afi address"/>
      <leaf name="afi">
        <type name="iana:address-family"/>
      </leaf>
      <leaf name="address">
        <type name="rloc-address"/>
      </leaf>
      <leaf name="priority">
        <type name="uint8"/>
      </leaf>
      <leaf name="weight">
        <type name="uint8"/>
      </leaf>
      <leaf name="multicast-priority">
        <type name="uint8"/>
      </leaf>
      <leaf name="multicast-weight">
        <type name="uint8"/>
      </leaf>
    </list>
  </grouping>
  <grouping name="mappings">
    <list name="mapping">
      <key value="instance-id eid-prefix"/>
      <leaf name="instance-id">
        <type name="instance-id-type"/>
      </leaf>
      <leaf name="eid-prefix">
        <type name="eid-address"/>
      </leaf>
      <leaf name="ttl">
        <type name="uint32"/>
      </leaf>
      <choice name="locators">
        <case name="negative-mapping">
          <leaf name="negative-mapping-action">
            <type name="negative-mapping-action"/>
          </leaf>
        </case>
        <case name="positive-mapping">
          <container name="rlocs">
            <uses name="rlocs"/>
          </container>
        </case>
        <default value="positive-mapping"/>
      </choice>
    </list>
  </grouping>
  <container name="itr">
    <presence value="LISP ITR operation enabled"/>
    <container name="rloc-probing">
      <presence value="RLOC probing active"/>
      <leaf name="interval">
        <type name="uint16"/>
        <units name="seconds"/>
        <description>
          <text>Interval in seconds</text>
        </description>
      </leaf>
      <leaf name="retries">
        <type name="uint8"/>
        <description>
          <text>Number of retries</text>
        </description>
      </leaf>
      <leaf name="retries-interval">
        <type name="uint16"/>
        <units name="seconds"/>
        <description>
          <text>Interval in seconds between retries</text>
        </description>
      </leaf>
    </container>
    <container name="itr-rlocs">
      <description>
        <text>List of RLOCs of the ITR included in Map-Requests</text>
      </description>
      <list name="itr-rloc">
        <key value="afi address"/>
        <leaf name="afi">
          <type name="iana:address-family"/>
        </leaf>
        <leaf name="address">
          <type name="loc-space-address"/>
        </leaf>
      </list>
    </container>
    <container name="local-eid-database">
      <list name="local-eid">
        <key value="instance-id eid-prefix"/>
        <leaf name="instance-id">
          <type name="instance-id-type"/>
        </leaf>
        <leaf name="eid-prefix">
          <type name="eid-address"/>
        </leaf>
        <container name="local-rlocs">
          <uses name="rlocs"/>
        </container>
      </list>
    </container>
    <container name="map-resolvers">
      <leaf-list name="map-resolver">
        <type name="loc-space-address"/>
      </leaf-list>
    </container>
    <container name="proxy-etrs">
      <leaf-list name="proxy-etr">
        <type name="loc-space-address"/>
      </leaf-list>
    </container>
    <container name="map-cache">
      <uses name="mappings"/>
    </container>
  </container>
</module>
